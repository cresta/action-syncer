name: 'Update a PR with syncer changes'
description: 'Update pull request after someone comments /sync'
inputs:
  token:
    description: 'The GitHub token to use'
    required: true
  username:
    description: 'The user.name to use for the commit'
    required: false
    default: 'Syncer bot'
  email:
    description: 'The user.email to use for the commit'
    required: false
    default: 'noreply@cresta.ai'
  message:
    description: 'The commit message to use'
    required: false
    default: 'nit: Syncer bot (Autoformat)'

runs:
  using: "composite"
  steps:
    - name: Run apply
      uses: cresta/action-syncer/apply@main # TODO: I wish I could just do "uses: ../apply" can someone figure out how to make that work
    - name: check for changes
      id: changes
      shell: bash
      run: |
        if [[ `git diff --exit-code` ]]; then
          echo "CHANGES=true" >> "$GITHUB_OUTPUT"
          echo 'Files causing linting to fail:'
          git diff --name-only
        else
          echo "CHANGES=false" >> "$GITHUB_OUTPUT"
        fi
    - name: Commit changes
      if: steps.changes.outputs.CHANGES == 'true'
      shell: bash
      run: |
        git config user.email "$EMAIL"
        git config user.name "$USER"
        git commit --all --message="$MESSAGE"
        git push
      env:
        USER: ${{ inputs.username }}
        EMAIL: ${{ inputs.email }}
        MESSAGE: ${{ inputs.message }}
    - name: 'Comment PR'
      uses: actions/github-script@v6.4.1
      if: steps.changes.outputs.CHANGES == 'true'
      with:
        github-token: ${{ inputs.token }}
        script: |
          const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
          github.rest.issues.createComment({ issue_number, owner, repo, body: 'Pushed a sync' });
    - name: 'Comment PR'
      uses: actions/github-script@v6.4.1
      if: steps.changes.outputs.CHANGES != 'true'
      with:
        github-token: ${{ inputs.token }}
        script: |
          const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
          github.rest.issues.createComment({ issue_number, owner, repo, body: 'No changes detected' });